apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: modmaster-api-ingress
  namespace: modmaster-pro-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.modmasterpro.com,https://admin.modmasterpro.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.modmasterpro.com
    secretName: api-modmasterpro-tls
  rules:
  - host: api.modmasterpro.com
    http:
      paths:
      # Backend API
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: backend-api-service
            port:
              number: 3000
      # AI Service
      - path: /ai/v1
        pathType: Prefix
        backend:
          service:
            name: ai-service
            port:
              number: 8000
      # WebSocket
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: backend-api-service
            port:
              number: 3000
      # Stripe Webhook (requires special handling)
      - path: /api/v1/payments/webhook
        pathType: Exact
        backend:
          service:
            name: backend-api-service
            port:
              number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: modmaster-app-ingress
  namespace: modmaster-pro-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.modmasterpro.com wss://api.modmasterpro.com https://js.stripe.com; frame-src https://js.stripe.com;";
spec:
  tls:
  - hosts:
    - app.modmasterpro.com
    secretName: app-modmasterpro-tls
  rules:
  - host: app.modmasterpro.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-mobile-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: modmaster-admin-ingress
  namespace: modmaster-pro-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # IP Whitelist for admin access (add your office IPs)
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"  # CHANGE THIS TO YOUR IP RANGES
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin";
spec:
  tls:
  - hosts:
    - admin.modmasterpro.com
    secretName: admin-modmasterpro-tls
  rules:
  - host: admin.modmasterpro.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard-service
            port:
              number: 3000